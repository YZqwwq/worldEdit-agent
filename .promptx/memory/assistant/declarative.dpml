<?xml version="1.0" encoding="UTF-8"?>
<memory>
  <item id="mem_1754815144616_crwaae7d4" time="2025/08/10 16:39">
    <content>
      World Builder (worldedit-agent) 是一款专业的世界观构建与管理工具，基于 Electron + Vue 3 + TypeScript 技术栈开发。
    
      核心设计目的：
      1. 统一化管理：整合分散的世界观元素（地理、角色、历史、设定等）到统一平台
      2. 可视化创作：提供直观的可视化工具，降低世界观创作的技术门槛
      3. 智能化辅助：集成AI功能，提供创作建议和一致性检查
      4. 协作化工作流：支持团队协作和版本管理
      5. 标准化输出：提供多种格式的导出功能
    
      主要功能模块：
      - 地图编辑器 (MapEditor)：多图层绘制、地形设计、地点标注
      - 角色编辑器 (CharacterEditor)：可视化角色设计、属性管理、关系网络
      - 文本编辑器 (TextEditor)：富文本编辑、AI智能辅助
      - 数据管理系统：基于IndexedDB的本地数据库，支持离线工作
      - 智能化功能：AI内容生成、一致性检查、创作建议
    
      技术架构：
      - 前端：Vue 3 + Composition API + Pinia状态管理
      - 数据层：IndexedDB (Dexie.js) + AJV数据验证
      - 桌面应用：Electron主进程 + 渲染进程 + IPC通信
    
      目标用户：游戏开发者、小说作家、桌游设计师、影视编剧、教育工作者
    
      设计原则：本地优先、数据隐私保护、离线工作、高性能渲染
    </content>
    <tags>#工具使用</tags>
  </item>
  <item id="mem_1754938730569_a42d982jd" time="2025/08/12 02:58">
    <content>
      WorldEdit Agent项目的AI Agent模块架构分析：
    
      ## 架构层次关系
      1. **IPC通信层** (src/main/ipc/ai-agent.ts)
      - 职责：处理渲染进程与主进程间的AI Agent通信
      - 定义完整的IPC通道常量和处理器函数
      - 依赖AIAgentService实例执行业务逻辑
    
      2. **服务层** (src/main/services/ai-agent/)
      - AIAgentService (index.ts): 统一服务入口，协调各子模块
      - AIAgentEngine: 基于LangChain的核心对话引擎
      - ContextManager: 管理对话上下文和会话状态
      - ModelAdapter: 统一多种AI模型提供商接口
      - MCPToolManager: MCP工具注册和调用管理
    
      ## 调用流程
      渲染进程 → IPC通信层 → AIAgentService → 四大核心组件
    
      ## 技术特点
      - 职责分离：通信与业务逻辑解耦
      - 模块化设计：每个组件职责单一
      - 支持多种AI模型：OpenAI、Claude、DeepSeek
      - 完整的会话管理和工具集成机制
    </content>
    <tags>#流程管理 #工具使用</tags>
  </item>
  <item id="mem_1755027847472_one3y9jbm" time="2025/08/13 03:44">
    <content>
      WorldEdit Agent AI-agent模块架构分析：
    
      核心架构：三层设计 - 前端渲染进程 → IPC通信 → 主进程服务层 → 外部AI服务
    
      主进程核心文件：
      - index.ts: AIAgentService统一入口，协调各组件
      - AIAgentEngine.ts: AI对话引擎核心，处理消息和工具调用
      - ModelAdapter.ts: 多模型适配器(OpenAI/Claude/DeepSeek)
      - MCPToolManager.ts: MCP工具管理器，集成LangChain
      - ContextManager.ts: 上下文管理器
      - ai-agent.ts(ipc): IPC通信处理器
    
      渲染进程核心文件：
      - AIAgent.vue: 主界面组件
      - ai-agent-api.ts: API客户端服务
      - useAIAgent.ts: Vue3组合式API
      - agent.ts(types): 完整类型定义
      - ai-agent.ts(plugins): Vue插件集成
    
      功能特性：多模型支持、智能创作、MCP工具集成、会话管理、流式响应、安全存储
    
      技术栈：Electron + Vue3 + TypeScript + LangChain + MCP协议
    </content>
    <tags>#工具使用</tags>
  </item>
</memory>